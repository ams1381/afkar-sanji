import Head from "next/head";
import React, {useState} from "react";
import {PageBox} from "@/styles/common";
import { useQueries } from "@tanstack/react-query";
import {CommonDrawer} from "@/components/common/CommonDrawer";
import QuestionerHeader from "@/components/common/QuestionerHeader";
import {axiosInstance} from "@/utilities/axios";
import {ContentBox} from "@/styles/folders/Questionnaire";
import {AdminPanelContainer} from "@/styles/Admin/adminPanel";
import {UsersHeader} from "@/components/Admin/UsersList/UsersListHeader";
import {QuestionnairesTable} from "@/components/Admin/QuestionnairesTable/QuestionnairesTable";

const QuestionnairesList = () => {
    const [ RightDrawerOpen , setRightDrawerOpen ] = useState(false);
    const [ userSearchValue , setUserSearchValue ] = useState(null);
    const [ CurrentPage , SetCurrentPage ] = useState(1);
    const [ pageSize , setPageSize ] = useState(7);
    const [ selectedRows , setSelectedRows ] = useState([]);

    const [ QuestionnairesListQuery , MeQuery ] = useQueries({
        queries : [
            {
                queryKey : ['QuestionnairesListQuery'],
                queryFn : async () => await axiosInstance.get(`/admin-api/interviews/`),
                refetchOnWindowFocus : false,
                retry : false
            }
            ,{ queryKey : ['MeQuery'] ,
                queryFn : async () => await axiosInstance.get(`/user-api/users/me/`) ,
                refetchOnWindowFocus : false,
                retry : false
            } ,
        ]
    })
    return <>
        <Head>
            <title>Afkar Sanji | Admin Panel | Questonnaires List</title>
            <meta name="description" content="Generated by create next app" />
            <meta name="viewport" content="width=device-width, initial-scale=1" />
            <link rel="icon" href="/favicon.ico" />
        </Head>
        <PageBox>
            <CommonDrawer isAdmin={true} RightDrawerOpen={RightDrawerOpen} setRightDrawerOpen={setRightDrawerOpen} />

            <QuestionerHeader pageName='questionnaires-list' meData={MeQuery?.data?.data}  />
            <main style={{ width : RightDrawerOpen ? '80%' : '100%', transition : '0.3s' }}>
                <ContentBox>
                    <AdminPanelContainer>
                        <UsersHeader selectedRows={selectedRows}
                         HeaderMode={'interviews'}

                         setSelectedRows={setSelectedRows}
                        />
                        <QuestionnairesTable pageSize={pageSize}
                                             setPageSize={setPageSize}
                                             QuestionnairesListQuery={QuestionnairesListQuery} />
                    </AdminPanelContainer>
                </ContentBox>
            </main>
        </PageBox>
    </>
}
export default  QuestionnairesList;
export async function getServerSideProps(context) {
    const { req } = context;
    const cookies = req.headers.cookie;
    const urlDest = req.url;

    if (cookies) {
        // Parse the cookies
        const parsedCookies = cookies.split(';').reduce((acc, cookie) => {
            const [key, value] = cookie.trim().split('=');
            acc[key] = decodeURIComponent(value);
            return acc;
        }, {});

        return {
            props: {
                cookies: parsedCookies,
            },
        };
    }
    return {
        redirect: {
            permanent: false,
            destination: "/auth?returnUrl=" + urlDest
        }
    };
}