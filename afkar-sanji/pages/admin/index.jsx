import {PageBox} from "@/styles/common";
import {CommonDrawer} from "@/components/common/CommonDrawer";
import React, {useState} from "react";
import {Header} from "@/components/common/Header";
import QuestionerHeader from "@/components/common/QuestionerHeader";
import {useQueries, useQuery} from "@tanstack/react-query";
import {axiosInstance} from "@/utilities/axios";
import Head from "next/head";
import {AdminHeaderTitlerContainer, AdminPanelContainer, AdminPanelHeader} from "@/styles/Admin/adminPanel";
import {ContentBox} from "@/styles/folders/Questionnaire";
import {Icon} from "@/styles/icons";
import {Button} from "antd";
import {AnalysisDashboard} from "@/components/Admin/AnalysisDashboard";

const AdminPanel = ({ cookies }) => {
    const [ RightDrawerOpen , setRightDrawerOpen ] = useState(false);
    const [ PanelDashboardMode , setPanelDashboardMode ] = useState('Analysis');
    const [ SideBarOpen , setOpen ] = useState(false);
    const MeQuery = useQuery(['MeReq'],
        async () => await axiosInstance.get(`/user-api/users/me/`),{
            refetchOnWindowFocus : false
        })

    return <>
        <Head>
            <title>Afkar Sanji | Admin Panel</title>
            <meta name="description" content="Generated by create next app" />
            <meta name="viewport" content="width=device-width, initial-scale=1" />
            <link rel="icon" href="/favicon.ico" />
        </Head>
    <PageBox>
        <CommonDrawer isAdmin={true} RightDrawerOpen={RightDrawerOpen} setRightDrawerOpen={setRightDrawerOpen} />
        <main style={{ width : RightDrawerOpen ? '80%' : '100%', transition : '0.3s' }}>
            <QuestionerHeader pageName='admin-panel' meData={MeQuery?.data?.data}  />
            <ContentBox>
                <AdminPanelContainer>
                <AdminPanelHeader>
                    <AdminHeaderTitlerContainer>
                        {
                            PanelDashboardMode === 'Analysis' && <>
                                <p>تجزیه و تحلیل</p>
                                <Icon name={'Analysis'} />
                            </>
                        }
                        {
                            PanelDashboardMode === 'UserSupport' && <>
                                <p>پشتیبانی کاربران</p>
                                <Icon name={'Support'} />
                            </>
                        }
                        {
                            PanelDashboardMode === 'Financial' && <>
                                <p>امور مالی</p>
                                <Icon name={'piggyBlank'} />
                            </>
                        }
                    </AdminHeaderTitlerContainer>
                    <div>
                        <Button onClick={() => setPanelDashboardMode('UserSupport')}
                                type={PanelDashboardMode === 'UserSupport' ? 'primary' : 'default'}>
                            پشتیبانی کاربران
                        </Button>
                        <Button onClick={() => setPanelDashboardMode('Analysis')}
                                type={PanelDashboardMode === 'Analysis' ? 'primary' : 'default'}>
                            تجزیه‌ و تحلیل
                        </Button>
                        <Button onClick={() => setPanelDashboardMode('Financial')}
                            type={PanelDashboardMode === 'Financial' ? 'primary' : 'default'}>
                            امور مالی
                        </Button>
                    </div>
                </AdminPanelHeader>
                    { PanelDashboardMode === 'Analysis' && <AnalysisDashboard />}
                    { PanelDashboardMode === 'Financial'&& <div>
                        mali
                    </div>}
                    { PanelDashboardMode === 'UserSupport' && <div>
                        support
                        </div>}
                </AdminPanelContainer>
            </ContentBox>

        </main>
    </PageBox>
    </>
}
export default AdminPanel;

export async function getServerSideProps(context) {
    const { req } = context;
    const cookies = req.headers.cookie;
    const urlDest = req.url;

    if (cookies) {
        // Parse the cookies
        const parsedCookies = cookies.split(';').reduce((acc, cookie) => {
            const [key, value] = cookie.trim().split('=');
            acc[key] = decodeURIComponent(value);
            return acc;
        }, {});

        return {
            props: {
                cookies: parsedCookies,
            },
        };
    }
    return {
        redirect: {
            permanent: false,
            destination: "/auth?returnUrl=" + urlDest
        }
    };
}